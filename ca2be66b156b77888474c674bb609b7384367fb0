{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "18b2f9d6_38edbb4d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1286922
      },
      "writtenOn": "2023-02-25T01:39:09Z",
      "side": 1,
      "message": "nit: can you update this to reflect the changes added",
      "revId": "ca2be66b156b77888474c674bb609b7384367fb0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c124858c_9498f795",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1827146
      },
      "writtenOn": "2023-02-28T21:58:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "18b2f9d6_38edbb4d",
      "revId": "ca2be66b156b77888474c674bb609b7384367fb0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71e8166d_77edb85a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1286922
      },
      "writtenOn": "2023-02-25T01:39:09Z",
      "side": 1,
      "message": "Could you share a before/after of a generated non-vendor cpp/header file (before aosp/2401793, and after this cl), as well as a vendor cpp \u0026 header file. Can be shared offline.",
      "revId": "ca2be66b156b77888474c674bb609b7384367fb0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17af3df9_5e1c9dca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1827146
      },
      "writtenOn": "2023-02-28T00:39:17Z",
      "side": 1,
      "message": "will do and will add links to the bug - early next week",
      "parentUuid": "71e8166d_77edb85a",
      "revId": "ca2be66b156b77888474c674bb609b7384367fb0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dcf8b9bb_57597ca2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1827146
      },
      "writtenOn": "2023-03-01T22:12:45Z",
      "side": 1,
      "message": "1. platform header before/after - https://diff.googleplex.com/#key\u003dtNQsqJZ2fqDw\n1. platform cpp before/after - https://diff.googleplex.com/#key\u003dswvC5LFmanZw\n\nSome diff exists about empty lines - will check these in follow up CL",
      "parentUuid": "17af3df9_5e1c9dca",
      "revId": "ca2be66b156b77888474c674bb609b7384367fb0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40cc7558_17928062",
        "filename": "stats/stats_log_api_gen/native_writer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 765,
      "author": {
        "id": 1286922
      },
      "writtenOn": "2023-02-25T01:39:09Z",
      "side": 1,
      "message": "nit: here and everywhere else, can you supply inline comments for what this bool is? eg: `/*isVendor\u003d*/ true`",
      "range": {
        "startLine": 765,
        "startChar": 72,
        "endLine": 765,
        "endChar": 76
      },
      "revId": "ca2be66b156b77888474c674bb609b7384367fb0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ad0756a2_e29d33ce",
        "filename": "stats/stats_log_api_gen/native_writer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 765,
      "author": {
        "id": 1827146
      },
      "writtenOn": "2023-02-28T21:58:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "40cc7558_17928062",
      "range": {
        "startLine": 765,
        "startChar": 72,
        "endLine": 765,
        "endChar": 76
      },
      "revId": "ca2be66b156b77888474c674bb609b7384367fb0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "504f2a4b_8de260e4",
        "filename": "stats/stats_log_api_gen/test_api_gen_vendor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 143,
      "author": {
        "id": 1286922
      },
      "writtenOn": "2023-02-25T01:39:09Z",
      "side": 1,
      "message": "it might be useful to include repeated fields (eg in vendor atom 4) as well to make sure the signature is as expected.",
      "revId": "ca2be66b156b77888474c674bb609b7384367fb0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad0fd324_6db5a2d2",
        "filename": "stats/stats_log_api_gen/test_api_gen_vendor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 143,
      "author": {
        "id": 1827146
      },
      "writtenOn": "2023-02-25T03:34:06Z",
      "side": 1,
      "message": "do you mean repeated nested field?",
      "parentUuid": "504f2a4b_8de260e4",
      "revId": "ca2be66b156b77888474c674bb609b7384367fb0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7f40a6e_3f851c8c",
        "filename": "stats/stats_log_api_gen/test_api_gen_vendor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 143,
      "author": {
        "id": 1286922
      },
      "writtenOn": "2023-02-28T00:36:33Z",
      "side": 1,
      "message": "No, repeated primitive fields (repeated int/string/etc). I don\u0027t think you have tests on those types, unless I am missing something.",
      "parentUuid": "ad0fd324_6db5a2d2",
      "revId": "ca2be66b156b77888474c674bb609b7384367fb0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "811e104e_12689829",
        "filename": "stats/stats_log_api_gen/test_api_gen_vendor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 143,
      "author": {
        "id": 1827146
      },
      "writtenOn": "2023-02-28T00:39:17Z",
      "side": 1,
      "message": "repeated field tests will be added in separate CLs\n\nThis CL for byte array to represent nested message",
      "parentUuid": "f7f40a6e_3f851c8c",
      "revId": "ca2be66b156b77888474c674bb609b7384367fb0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9a921a3_518c3f5d",
        "filename": "stats/stats_log_api_gen/test_api_gen_vendor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 143,
      "author": {
        "id": 1286922
      },
      "writtenOn": "2023-02-28T00:44:40Z",
      "side": 1,
      "message": "Sure, a follow up also works. Ideally they could have been added in aosp/2401793 since that added support for repeated fields in the gen code.",
      "parentUuid": "811e104e_12689829",
      "revId": "ca2be66b156b77888474c674bb609b7384367fb0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "478772c2_cc4f107a",
        "filename": "stats/stats_log_api_gen/test_api_gen_vendor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 143,
      "author": {
        "id": 1827146
      },
      "writtenOn": "2023-02-28T21:58:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d9a921a3_518c3f5d",
      "revId": "ca2be66b156b77888474c674bb609b7384367fb0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}