{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "803db8de_cfd07890",
        "filename": "stats/stats_log_api_gen/Collation.cpp",
        "patchSetId": 5
      },
      "lineNbr": 453,
      "author": {
        "id": 1286922
      },
      "writtenOn": "2022-12-06T06:20:23Z",
      "side": 1,
      "message": "I think we should account for vendor pulled atoms as well here",
      "revId": "eb8595747796b96f11124ea840c4f0c17051b046",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c4a2282_784e393f",
        "filename": "stats/stats_log_api_gen/Collation.cpp",
        "patchSetId": 5
      },
      "lineNbr": 453,
      "author": {
        "id": 1431413
      },
      "writtenOn": "2022-12-07T01:12:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "803db8de_cfd07890",
      "revId": "eb8595747796b96f11124ea840c4f0c17051b046",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79904869_0141731e",
        "filename": "stats/stats_log_api_gen/Collation.cpp",
        "patchSetId": 5
      },
      "lineNbr": 476,
      "author": {
        "id": 1827146
      },
      "writtenOn": "2022-12-06T18:16:34Z",
      "side": 1,
      "message": "I know that this an existing code just moved around - it is suggested to avoid rely on loop index terminal value - it is not straight forward that this if actually tests \"did we find an appropriate module\"\n\nIt would be better to define standalone explicit `bool moduleFound`, update the value in the loop and test after the loop",
      "revId": "eb8595747796b96f11124ea840c4f0c17051b046",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4fb2d1aa_84e10305",
        "filename": "stats/stats_log_api_gen/Collation.cpp",
        "patchSetId": 5
      },
      "lineNbr": 476,
      "author": {
        "id": 1431413
      },
      "writtenOn": "2022-12-07T01:12:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "79904869_0141731e",
      "revId": "eb8595747796b96f11124ea840c4f0c17051b046",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f3847f4_d1c66d22",
        "filename": "stats/stats_log_api_gen/Collation.h",
        "patchSetId": 5
      },
      "lineNbr": 189,
      "author": {
        "id": 1827146
      },
      "writtenOn": "2022-12-06T18:16:34Z",
      "side": 1,
      "message": "simple types are ok to pass by value - the enum maps to an int under the hood\nwe could remove const from an argument then in a same way as code argument in this API signature",
      "range": {
        "startLine": 189,
        "startChar": 72,
        "endLine": 189,
        "endChar": 81
      },
      "revId": "eb8595747796b96f11124ea840c4f0c17051b046",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1081d5ca_39675e50",
        "filename": "stats/stats_log_api_gen/Collation.h",
        "patchSetId": 5
      },
      "lineNbr": 189,
      "author": {
        "id": 1431413
      },
      "writtenOn": "2022-12-07T01:12:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1f3847f4_d1c66d22",
      "range": {
        "startLine": 189,
        "startChar": 72,
        "endLine": 189,
        "endChar": 81
      },
      "revId": "eb8595747796b96f11124ea840c4f0c17051b046",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e155a2ba_17003f17",
        "filename": "stats/stats_log_api_gen/test.proto",
        "patchSetId": 5
      },
      "lineNbr": 282,
      "author": {
        "id": 1286922
      },
      "writtenOn": "2022-12-06T06:20:23Z",
      "side": 1,
      "message": "this is just to test the atom ranges?",
      "revId": "eb8595747796b96f11124ea840c4f0c17051b046",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a8db96af_afaa9742",
        "filename": "stats/stats_log_api_gen/test.proto",
        "patchSetId": 5
      },
      "lineNbr": 282,
      "author": {
        "id": 1431413
      },
      "writtenOn": "2022-12-07T01:12:30Z",
      "side": 1,
      "message": "just updating the tests as we\u0027re no longer relying on the oneof name to detect whether an atom is pushed or pulled but rather relying on the range where the atom id falls under. So these test atoms need to be in the correct ranges here.",
      "parentUuid": "e155a2ba_17003f17",
      "revId": "eb8595747796b96f11124ea840c4f0c17051b046",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5df53864_6d54b087",
        "filename": "stats/stats_log_api_gen/test_collation.cpp",
        "patchSetId": 5
      },
      "lineNbr": 449,
      "author": {
        "id": 1286922
      },
      "writtenOn": "2022-12-06T06:20:23Z",
      "side": 1,
      "message": "nit: is there a reason to declare these vars before using them? i think defining them at use can help w/ readability",
      "revId": "eb8595747796b96f11124ea840c4f0c17051b046",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5b6e0bbd_b53feb9d",
        "filename": "stats/stats_log_api_gen/test_collation.cpp",
        "patchSetId": 5
      },
      "lineNbr": 449,
      "author": {
        "id": 1431413
      },
      "writtenOn": "2022-12-07T01:12:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5df53864_6d54b087",
      "revId": "eb8595747796b96f11124ea840c4f0c17051b046",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6d90f68_a1884e67",
        "filename": "stats/stats_log_api_gen/test_collation.cpp",
        "patchSetId": 5
      },
      "lineNbr": 466,
      "author": {
        "id": 1286922
      },
      "writtenOn": "2022-12-06T06:20:23Z",
      "side": 1,
      "message": "nit: can do annotationSet()-\u003ebegin()-\u003eget() and remove the unneeded iterator.",
      "range": {
        "startLine": 465,
        "startChar": 4,
        "endLine": 466,
        "endChar": 40
      },
      "revId": "eb8595747796b96f11124ea840c4f0c17051b046",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9152931b_b2c84e10",
        "filename": "stats/stats_log_api_gen/test_collation.cpp",
        "patchSetId": 5
      },
      "lineNbr": 466,
      "author": {
        "id": 1431413
      },
      "writtenOn": "2022-12-07T01:12:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f6d90f68_a1884e67",
      "range": {
        "startLine": 465,
        "startChar": 4,
        "endLine": 466,
        "endChar": 40
      },
      "revId": "eb8595747796b96f11124ea840c4f0c17051b046",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}