{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5dbb9691_790fea71",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1208973
      },
      "writtenOn": "2021-02-17T20:05:46Z",
      "side": 1,
      "message": "What is the best way to test this?  I described what I did in the test stanzas but something more complete would be nice.\n\nAlso, I\u0027m not sure whether I need to handle the Q API.",
      "revId": "932986f4d5ba70de78031d615f5bfed6a5c7749d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7faf92b_9b7fa8be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1431413
      },
      "writtenOn": "2021-02-19T21:29:18Z",
      "side": 1,
      "message": "Is this needed to log a specific atom to statsd? I\u0027m not familiar with Rust and your use case in particular here. Can you schedule a time to meet during Android Metrics Client Office Hours (go/amc-oh) so we can better understand your use case? Thanks",
      "revId": "932986f4d5ba70de78031d615f5bfed6a5c7749d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ee064a5_b47b9727",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1208973
      },
      "writtenOn": "2021-02-19T21:31:03Z",
      "side": 1,
      "message": "Rust programs in general will presumably want to log things, and so to support all possible atoms we implemented a Rust backend.",
      "parentUuid": "b7faf92b_9b7fa8be",
      "revId": "932986f4d5ba70de78031d615f5bfed6a5c7749d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5e17e9a_9b146242",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1208973
      },
      "writtenOn": "2021-02-22T17:19:56Z",
      "side": 1,
      "message": "Some relevant samples of the generated Rust code are at https://paste.googleplex.com/4642731377819648.",
      "revId": "932986f4d5ba70de78031d615f5bfed6a5c7749d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed1fe5ac_92a4258c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1208973
      },
      "writtenOn": "2021-02-22T22:32:23Z",
      "side": 1,
      "message": "Friendly ping.\n\nThe office hours are full this week, but I don\u0027t think we need to delay this CL for two weeks for them.  For code written in Rust to be able to use this library, we need a Rust interface such as this.",
      "parentUuid": "8ee064a5_b47b9727",
      "revId": "932986f4d5ba70de78031d615f5bfed6a5c7749d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6cd5161_3052aeaf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1431413
      },
      "writtenOn": "2021-02-23T20:25:09Z",
      "side": 1,
      "message": "I\u0027ve set up a meeting for tomorrow. Our main concerns are related to maintenance and to better understand how Rust programs will log to statsd.\n\nIt seems like we\u0027re depending on C++ generated code. Generated Rust code is calling generated C++ code. Ideally, we\u0027d want generated Rust code to use libstatspush and libstatspull directly like C++ generated code does.",
      "parentUuid": "ed1fe5ac_92a4258c",
      "revId": "932986f4d5ba70de78031d615f5bfed6a5c7749d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff47e3f6_87993265",
        "filename": "stats/stats_log_api_gen/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 183,
      "author": {
        "id": 1431413
      },
      "writtenOn": "2021-02-23T20:25:09Z",
      "side": 1,
      "message": "FYI, not all atoms are logged from libstatslog. For example lmkd related atoms use libstatslog_lmkd:\nhttps://source.corp.google.com/android/system/memory/lmkd/Android.bp;rcl\u003d1bce47b66fe9246def651cbe856f89264859f83a;l\u003d75\n\nFor atoms that are currently being logged using libstatslog, this is fine. For atoms that are not logged using libstatslog, we probably don\u0027t want to log them through libstatslog when logging from Rust programs.",
      "range": {
        "startLine": 183,
        "startChar": 9,
        "endLine": 183,
        "endChar": 20
      },
      "revId": "932986f4d5ba70de78031d615f5bfed6a5c7749d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}