{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9337872d_26b590eb",
        "filename": "stats/express/expresscatalogvalidator/Android.bp",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1373412
      },
      "writtenOn": "2023-06-06T14:32:31Z",
      "side": 1,
      "message": "Is there an equivalent of `proto_data` or `cc_embed_data`? It could eliminate all the parsing code.",
      "range": {
        "startLine": 43,
        "startChar": 4,
        "endLine": 45,
        "endChar": 6
      },
      "revId": "c96d7e72d2aabb535f428018d50d1e1745be2dde",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46999831_e220531b",
        "filename": "stats/express/expresscatalogvalidator/Android.bp",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1827146
      },
      "writtenOn": "2023-06-06T18:43:13Z",
      "side": 1,
      "message": "AFAIK `proto_data` is not used in Android\n\n`data` is a proper way how to combine data files with test binary\nsee for reference:\n- https://source.corp.google.com/h/googleplex-android/platform/superproject/+/master:packages/modules/StatsD/tests/Android.bp;l\u003d46\n- https://source.corp.google.com/h/googleplex-android/platform/superproject/+/master:packages/modules/StatsD/statsd/tools/localtools/Android.bp;l\u003d54\n\nAlso https://g3doc.corp.google.com/wireless/android/partner/compatibility/g3doc/dev/write-a-test/host-side-test.md?cl\u003dhead",
      "parentUuid": "9337872d_26b590eb",
      "range": {
        "startLine": 43,
        "startChar": 4,
        "endLine": 45,
        "endChar": 6
      },
      "revId": "c96d7e72d2aabb535f428018d50d1e1745be2dde",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc06a74c_02ec6e0e",
        "filename": "stats/express/expresscatalogvalidator/Android.bp",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1373412
      },
      "writtenOn": "2023-06-06T22:06:58Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "46999831_e220531b",
      "range": {
        "startLine": 43,
        "startChar": 4,
        "endLine": 45,
        "endChar": 6
      },
      "revId": "c96d7e72d2aabb535f428018d50d1e1745be2dde",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84959d68_22911d45",
        "filename": "stats/express/libexpresscatalog/catalog.cpp",
        "patchSetId": 4
      },
      "lineNbr": 53,
      "author": {
        "id": 1373412
      },
      "writtenOn": "2023-06-06T14:32:31Z",
      "side": 1,
      "message": "Could we also print the check that failed to help the user quickly correct the id?",
      "range": {
        "startLine": 53,
        "startChar": 52,
        "endLine": 53,
        "endChar": 56
      },
      "revId": "c96d7e72d2aabb535f428018d50d1e1745be2dde",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21dcf89f_41320c3f",
        "filename": "stats/express/libexpresscatalog/catalog.cpp",
        "patchSetId": 4
      },
      "lineNbr": 53,
      "author": {
        "id": 1827146
      },
      "writtenOn": "2023-06-06T18:48:10Z",
      "side": 1,
      "message": "That will require more sophisticated validation - std implementation returns true only in case if there is a full match - if no full match - no associated info is provided to extract useful info for user",
      "parentUuid": "84959d68_22911d45",
      "range": {
        "startLine": 53,
        "startChar": 52,
        "endLine": 53,
        "endChar": 56
      },
      "revId": "c96d7e72d2aabb535f428018d50d1e1745be2dde",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95562fa3_58575527",
        "filename": "stats/express/libexpresscatalog/catalog.cpp",
        "patchSetId": 4
      },
      "lineNbr": 53,
      "author": {
        "id": 1373412
      },
      "writtenOn": "2023-06-06T22:06:58Z",
      "side": 1,
      "message": "It was thinking that we could print the regex, so the author does not have to code search to find out why the check failed.\n\nThe regex starts with `_*`, so it will permit names like \"_cool_stuff\", right? This part of the id will become a proto field and https://protobuf.dev/reference/protobuf/proto3-spec/#identifiers requires field names to start with a letter. So let\u0027s require the id to start with a letter too.",
      "parentUuid": "21dcf89f_41320c3f",
      "range": {
        "startLine": 53,
        "startChar": 52,
        "endLine": 53,
        "endChar": 56
      },
      "revId": "c96d7e72d2aabb535f428018d50d1e1745be2dde",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb0470b3_5e1b05c9",
        "filename": "stats/express/libexpresscatalog/catalog.cpp",
        "patchSetId": 4
      },
      "lineNbr": 53,
      "author": {
        "id": 1827146
      },
      "writtenOn": "2023-06-07T01:11:44Z",
      "side": 1,
      "message": "I think the regex could be printed out\n\nAlso it could be added as a reference in the tex document",
      "parentUuid": "95562fa3_58575527",
      "range": {
        "startLine": 53,
        "startChar": 52,
        "endLine": 53,
        "endChar": 56
      },
      "revId": "c96d7e72d2aabb535f428018d50d1e1745be2dde",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "459f9711_46771e43",
        "filename": "stats/express/libexpresscatalog/utils.h",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 1431413
      },
      "writtenOn": "2023-06-06T17:55:17Z",
      "side": 1,
      "message": "Please fix this WARNING reported by Build Warnings: parameter \u0027name\u0027 is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]\n\nAnalyzer Description: Reports warnings that originate from build.log in the build artifacts.\nOwner: farivar@google.com\n\n    parameter \u0027name\u0027 is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]\n        ExecutionMeasure(std::string name) : mName(name) {\n                                                   ^\n                                                   std::move( )\n\nThis finding was found on https://android-build.googleplex.com/builds/build-details/P57836740/targets/aosp_arm64-userdebug_tidy, but may also be present on other builds.",
      "range": {
        "startLine": 49,
        "startChar": 48,
        "endLine": 49,
        "endChar": 54
      },
      "revId": "c96d7e72d2aabb535f428018d50d1e1745be2dde",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5268bb1a_3de5dffd",
        "filename": "stats/express/libexpresscatalog/utils.h",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 1827146
      },
      "writtenOn": "2023-06-06T20:06:21Z",
      "side": 1,
      "message": "due to pre commit issues this CL needs to be merged into internal branch first\n\nI will follow up on this comment there and will CP into aosp after\n\nhttp://ag/20159448\n\nThank you",
      "parentUuid": "459f9711_46771e43",
      "range": {
        "startLine": 49,
        "startChar": 48,
        "endLine": 49,
        "endChar": 54
      },
      "revId": "c96d7e72d2aabb535f428018d50d1e1745be2dde",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}